 
Kubernetes: 
--------- 
 
what is the diff b/w Docker & Kuberntes?
----------------
  - Docker is a containerization platform, while Kubernetes is a container orchestration platform.
    Docker is used to build and run containers. A container is a lightweight, isolated environment that contains everything an application needs to run, including its          
    code, runtime environment, system tools, system libraries, and settings.

    Kubernetes is used to manage and orchestrate containers. It can be used to deploy, manage, and scale containerized applications across a cluster of hosts.
 
What are the Main components of K8's archetecture?  
--------------------
  Control plane: 
  -------------
    The control plane is responsible for managing the Kubernetes cluster. It consists of the following components:

  Kubernetes API server: 
    The API server is the front-end for the Kubernetes cluster. It exposes a REST API that clients can use to manage the cluster.
    
  Kubernetes scheduler: 
    The scheduler is responsible for assigning pods to nodes in the cluster.
    
  Kubernetes controller manager: 
    The controller manager is a collection of controllers that perform various tasks to maintain the desired state of the cluster.
    
  etcd: 
    etcd is a distributed key-value store that is used to store the cluster state.
  CCM: (CLOUD Control Manager)
    

  Data Plane:
  ----------
  Kubelet- provides pods health info to api server. Then api-server takes decision to create rs or not
  kubeproxy- Networking
  CRE - Docker  
 
What are the diff b/w Docker swarm & Kubernetes?
---------------

Feature	              Docker Swarm	                                                    Kubernetes

Type	      Container orchestration platform	                                  Container orchestration platform
Purpose	    Managing and deploying containerized applications	                  Managing and deploying containerized applications
Scope	      Single host or cluster of hosts	                                    Cluster of hosts
Features	  Container scheduling, service discovery, load balancing,            Container scheduling, service discovery, load balancing, self-healing, and more advanced
           self-healing                                                       features such as rollouts, rollbacks, and canary deployments
Community	  Smaller community	                                                  Larger community
Ecosystem	  Smaller ecosystem	                                                  Larger ecosystem

Ease of    	Easier to use	                                                      More complex to use
use
 
What is diff b/w Docker contianer & K8's Pod?
-------------------

Feature                      	Docker container	                                                  Kubernetes pod
                	A lightweight, isolated environment that contains            A group of one or more containers, with shared storage/network resources, and a
                  everything an application needs to run, including            specification for how to run the containers.
Definition        its code, runtime environment, system tools, 
                  system libraries, and settings.
                  

Scope	          Can run on a single host or multiple hosts using             	Can only run on a Kubernetes cluster.
                container orchestration platforms like Docker Swarm or 
                Kubernetes.
Resources    	  Each container has its own isolated resources, such as CPU,    Pods share the resources of the node they are running on.
               memory, and disk space.
Networking	   Each container has its own network namespace.	                 Pods share the same network namespace as the node they are running on.
Lifecycle	     Containers are managed by the container runtime, such as 	       Pods are managed by the Kubernetes controller manager.
               Docker or containerd.
 
What is the namespaces in kubernetes?
-----------------


Isolating production and development environments
Running multiple projects on the same cluster
Implementing security policies
 
What is the role of kube-proxy?
---------------

Service discovery: 
  Kube-proxy maintains a cache of all services in the cluster. This cache is used to route traffic to the correct pods.
Load balancing:
  Kube-proxy distributes traffic across multiple pods for a service. This helps to improve performance and reliability.
Failover: 
  Kube-proxy detects and responds to pod failures. If a pod fails, kube-proxy will route traffic to another pod for the service.

 
What are the Diff types of Services in Kubernetes?
------------------

ClusterIP: A ClusterIP service exposes the pods within the Kubernetes cluster.
NodePort: A NodePort service exposes the pods on a specific port on each node in the cluster.
LoadBalancer: A LoadBalancer service exposes the pods using a load balancer provided by the cloud provider.
ExternalName: An ExternalName service exposes the pods using an external DNS name.
 
What are the diff b/w Node port & Load Balencder Services in K8'S?
-------------------------
 
What is the role of Kublet?
----------------------
Registers the node with the Kubernetes API server.
Pulls images from the container registry.
Creates and starts pods.
Monitors pods.
Restarts failed pods.
 
Day to Day activities on Kubernetes?
---------------------------------
  - as DevOps Engineer we manage the kubernets cluster & make sure that applications deployed k8's cluster & there are no issues with the application & Moniter them.
    ex:
    If there is any issue with Pods, Services, or any port is not communicating as expecting should help them resolving as SME.
    
  - we have 3 master nodes & 10 worker nodes, We do a lot of maintainence activies like : upgrading, adding any required mandatory packages 

Is Load Balencing Service Restrricted to only Cloud Providers?
----------------------------------------------------------
No. Baremetal LB implementations is available at https://github.com/metallb/metallb



